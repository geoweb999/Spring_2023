
public class FixedWing extends Aircraft {
	
	public static final int DEFAULT_NUMBER_ENGINES = 1;

	private int numEngines;
	private int throttlePercent;

	public FixedWing(String registrationID, Location location, int soulsOnBoard, int numEngines) {
		super(registrationID, location,soulsOnBoard);
		this.numEngines = numEngines;
		this.throttlePercent = 0;
	}
	
	public FixedWing (String registrationID, Location location, int soulsOnBoard) {
		this(registrationID, location, soulsOnBoard, DEFAULT_NUMBER_ENGINES);
	}
	
	public int getNumEngines() {
		return numEngines;
	}

	public void setNumEngines(int numEngines) {
		this.numEngines = numEngines;
	}

	public int getThrottlePercent() {
		return throttlePercent;
	}

	public void setThrottlePercent(int throttlePercent) {
		this.throttlePercent = throttlePercent;
	}
	
	public String getTerrainType() {
		return super.getTerrainType();
	}
	
	public void executeLanding() {
		// check for landing permission and execute landing procedure
		if (this.requestLanding() && this.getTerrainType() == "LAND") {
			this.setAirSpeed(0);
			this.setThrottlePercent(0);
			this.setVerticalSpeed(0);
			this.setAirborne(false);
		} else {
			System.out.println("Landing request denied.");
		}
	}
	
	public void executeTakeoff() {
		if (this.requestTakeoff() && this.getTerrainType() == "LAND") {
			this.setAirSpeed(100);
			this.setThrottlePercent(100);
			super.setVerticalSpeed(1);
			this.setAirborne(true);
		} else {
			System.out.println("Takeoff request denied.");
		}
	}
	@Override
	public String toString() {
		String status = super.toString();
		String plural = (this.numEngines > 1) ? "s" : "";
		status += "\n\t " + this.numEngines + " engine" + plural + " throttle" + plural + " at: " + this.throttlePercent;
		return status;
		
	}
	@Override
	public boolean equals(Object obj) {
		if(obj instanceof FixedWing) {
			return super.equals(obj);
			
		} else {
			return false;
		}
		
	}
}
