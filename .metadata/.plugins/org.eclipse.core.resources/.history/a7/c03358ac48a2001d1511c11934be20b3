public class DigitalReceipt extends Receipt {
	private String email;

	public DigitalReceipt(Store store, int numItems, double total, String receiptID, String email) {
		super(store, numItems, total, receiptID);
		this.email = email;

	}
	
	public DigitalReceipt(Store store, int numItems, double total, String receiptID) {
		super(store, numItems, total, receiptID);
		this.email = "";

	}

	public DigitalReceipt(Store store, double total, String receiptID) {
		super(store, total, receiptID);
		this.email = "";
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public static boolean validateEmail(String email) {
		int idx = email.indexOf('@');
		int idx2 = email.lastIndexOf('@');
		if (idx != idx2) { // there's more than 1 '@'
			System.out.println("more than 1 '@'");
			return false;
		}
		if (idx == -1) {
			System.out.println("Missing '@'");
			return false;
		}
		
		if (idx >= email.length() - 5) { 
			System.out.println("'@' does not allow space for TLD");
			return false;	// if @ is not found or @ at beginning [idx <=0] or @ too close to end (no room for .XXX)
		}
		
		String name = email.substring(0, idx);     // we know that '@' is not the first character
		String domain = email.substring(idx + 1);  // we know that '@' is not the last character (see above)
		
		if (name.toUpperCase() == name.toLowerCase()) { // can only contain non-alphabetical characters
			System.out.println("Name does not include at least 1 letter");
			return false;
		}
		
		idx = domain.lastIndexOf('.');
		if (idx != domain.length() - 4) { // there must be 3 chars after the last '.'
			System.out.println("TLD incorrect size or missing");
			return false;
		}
		
		char[] TLD = domain.substring(domain.length() - 3).toCharArray();
		for (char c : TLD) {	// check to see if each character is a letter
			if (!Character.isLetter(c)) {
				System.out.println("TLD includes non-letter character");
				return false;
			}
		}

		return true;
	}
	
	@Override
	public String toString() {
		return super.toString() + "\n\tDigital copy sent to: " + this.email;
	}
}
