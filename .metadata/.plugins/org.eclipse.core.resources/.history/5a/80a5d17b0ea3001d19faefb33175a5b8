public class Seaplane extends FixedWing {

	public static final int DEFAULT_NUMBER_ENGINES = 1;
	
	public Seaplane(String registrationID, Location location, int soulsOnBoard, int numEngines) {
		super(registrationID, location, soulsOnBoard, numEngines);
	}

	public Seaplane(String registrationID, Location location, int soulsOnBoard) {
		super(registrationID, location, soulsOnBoard, DEFAULT_NUMBER_ENGINES);
	}

	@Override
	public boolean executeLanding() {
		// check for landing permission and execute landing procedure
		if (this.requestLanding() && this.getTerrainType() == "SEA") {
			this.setAirSpeed(0);
			this.setThrottlePercent(0);
			this.setVerticalSpeed(0);
			this.setAirborne(false);
			return true;
		} else {
			System.out.println("Landing request denied.");
			return false;
		}
	}
	
	@Override
	public boolean executeTakeoff() {
		if (this.requestTakeoff() && this.getTerrainType() == "SEA") {
			this.setAirSpeed(100);
			this.setThrottlePercent(100);
			this.setVerticalSpeed(1);
			this.setAirborne(true);
			return true;
		} else {
			System.out.println("Takeoff request denied.");
			return false;
		}
	}
	
//	public void executeHover() {
//	}
	
	
	@Override
	public boolean equals(Object obj) {
		if(obj instanceof Seaplane) {
			return super.equals(obj);
			
		} else {
			return false;
		}
		
	}
}
