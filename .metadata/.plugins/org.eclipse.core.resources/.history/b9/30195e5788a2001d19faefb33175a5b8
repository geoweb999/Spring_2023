
public abstract class Aircraft {

	
	private Location location;
	private float airSpeed;
	private int soulsOnBoard;
	private String registrationID;
	private boolean airBorne;
	private int verticalSpeed;   	// -1 = descent, 0 = cruise, +1 = climb
	
	public Aircraft(String registrationID, Location location, int soulsOnBoard) {
		this.registrationID = registrationID;
		this.location = location;
		this.soulsOnBoard = soulsOnBoard;
		this.airBorne = false;
		this.airSpeed = 0;
		this.verticalSpeed = 0;
	}

	public Location getLocation() {
		return location;
	}
	
	public String getTerrainType() {
		return this.location.getTerrainType();
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	public float getAirSpeed() {
		return airSpeed;
	}

	public void setAirSpeed(float airSpeed) {
		airSpeed = (airSpeed < 0) ? 0 : airSpeed;
		this.airSpeed = airSpeed;
	}

	public int getSoulsOnBoard() {
		return soulsOnBoard;
	}

	public void setSoulsOnBoard(int soulsOnBoard) {
		this.soulsOnBoard = soulsOnBoard;
	}

	public String getRegistrationID() {
		return registrationID;
	}

	public void setRegistrationID(String registrationID) {
		this.registrationID = registrationID;
	}
	
	public void setAirborne(boolean airborne) {
		this.airBorne = airborne;
	}
	
	public boolean isAirborne() {
		return this.airBorne;
	}

	
	public int getVerticalSpeed() {
		return verticalSpeed;
	}
	
	public void setAltitude(int altitude) {
		this.location.setAltitudeAGL(altitude);
	}

	public void setVerticalSpeed(int verticalSpeed) {
		verticalSpeed = (verticalSpeed > 0) ? 1 : verticalSpeed;
		verticalSpeed = (verticalSpeed < 0) ? verticalSpeed : -1;
		this.verticalSpeed = verticalSpeed;
	}

	public boolean requestTakeoff() {
		// return false if already airborne
		return (!this.airBorne);
	}

	public boolean requestLanding() {
		// return false if already landed
		return (this.airBorne);
	}
	
	@Override
	public String toString() {
		String airborne = (this.airBorne) ? "is airborne" : "is not airborne";
		String verticalAirspeed = (this.verticalSpeed > 0) ? "climbing" : "";
		verticalAirspeed = (this.verticalSpeed < 0) ? "descending" : verticalAirspeed;
		String status = "Reg#: " + this.registrationID + " Location: " + this.location + " souls: " + 
				this.soulsOnBoard + " " + airborne + " " + verticalAirspeed;
		return status;
		
	}
	
	@Override
	public boolean equals(Object obj) {
		if(obj instanceof Aircraft) {
			Aircraft otherAircraft = (Aircraft) obj;
			
			String otherRegistrationId = otherAircraft.registrationID;
			
			if(this.registrationID.equalsIgnoreCase(otherRegistrationId)) {
				return true;
			} else {
				return false;
			}
			
		} else {
			return false;
		}
		
	}
	
	public abstract void executeLanding();
	public abstract void executeTakeoff();
}