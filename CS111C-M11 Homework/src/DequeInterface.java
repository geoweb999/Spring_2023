public interface DequeInterface<T> extends QueueInterface<T> {	/**	 * Adds a new entry to the front of this dequeue.	 * 	 * @param element element to be added to the dequeue	 */	public void addToFront(T element);			/**	 * Adds a new entry to the back of this dequeue.	 * 	 * @param element element to be added to the dequeue	 */	public void addToBack(T element);	/**	 * Removes and returns the element at the front of the dequeue.	 * The size of the dequeue is decreased by one.	 * 	 * @return The element at the front of the dequeue	 * @throws EmptyQueueException if the dequeue is empty when the method is invoked	 */	public T removeFront();		/**	 * Removes and returns the element at the back of the dequeue.	 * The size of the dequeue is decreased by one.	 * 	 * @return The element at the back of the dequeue	 * @throws EmptyQueueException if the dequeue is empty when the method is invoked	 */	public T removeBack();	/**	 * Retrieves the element at the front of this dequeue.	 * The size of the dequeue is not changed.	 * 	 * @return The element at the front of the dequeue.	 * @throws EmptyQueueException if the dequeue is empty when the method is invoked	 */	public T getFront();			/**	 * Retrieves the element at the back of this dequeue.	 * The size of the dequeue is not changed.	 * 	 * @return The element at the back of the dequeue.	 * @throws EmptyQueueException if the dequeue is empty when the method is invoked	 */	public T getBack();		/**	 * Determines if there are any elements in the dequeue.	 * 	 * @return True if the dequeue is empty.	 */	public boolean isEmpty();	/** Removes all entries from the dequeue. */	public void clear();} 